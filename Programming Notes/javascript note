difference between findindex indexof include 
the sort() only compares the first element wether it is number or the alphabet then if the first character is same then it compare the second element. 

Sort(sort function)  we can put the function inside it to compare the two numbers and the right function is array.sort( (a,b )=> a-b)

every thing in the javascript is an object and to form the we can form object by making var obj = {} and we can set the key and value pair for the object using obj.ram = 0 and we can make the object counter as obj.ram += 1 


The folllowing link explains the time complexity perfectly 
https://adrianmejia.com/data-structures-time-complexity-for-beginners-arrays-hashmaps-linked-lists-stacks-queues-tutorial/#HashMap-operations-time-complexity
=====================           Array in the javascript         =================================
Operation	                        Worst
==================================================
Access (Array.[])	                O(1)
Insert head (Array.unshift)	        O(n)
Insert tail (Array.push)	        O(1)
Search (for value)	                O(n)
Delete (Array.splice)	            O(n)



Function	        Runtime	Description
array.push          	O(1)	Insert element to the end of the array
array.pop	            O(1)	Remove element to the end of the array
array.shift	            O(n)	Remove element to the beginning of the array
array.unshift	        O(n)	Insert element(s) to the beginning of the array
array.slice	            O(n)	Returns a copy of the array from beginning to end.
array.splice	        O(n)	Changes (add/remove) the array

========================================== Map ===============================================================
Operation	                        Worst	    Amortized	    Comments
Access/Search (HashMap.get)	        O(n)	        O(1)	        O(n) is an extreme case when there are too many collisions
Insert/Edit (HashMap.set)	        O(n)	        O(1)	        O(n) only happens with rehash when the Hash is 0.75 full
Delete (HashMap.delete)	            O(n)	        O(1)	        O(n) is an extreme case when there are too many collisions

================================================= set using list ===================================================